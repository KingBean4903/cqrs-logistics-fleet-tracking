// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/route.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Origin        string                 `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination   string                 `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRouteRequest) Reset() {
	*x = CreateRouteRequest{}
	mi := &file_proto_route_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteRequest) ProtoMessage() {}

func (x *CreateRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_route_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteRequest.ProtoReflect.Descriptor instead.
func (*CreateRouteRequest) Descriptor() ([]byte, []int) {
	return file_proto_route_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRouteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRouteRequest) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *CreateRouteRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type CreateRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRouteResponse) Reset() {
	*x = CreateRouteResponse{}
	mi := &file_proto_route_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRouteResponse) ProtoMessage() {}

func (x *CreateRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_route_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRouteResponse.ProtoReflect.Descriptor instead.
func (*CreateRouteResponse) Descriptor() ([]byte, []int) {
	return file_proto_route_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRouteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdatedRouteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Origin        *string                `protobuf:"bytes,2,opt,name=origin,proto3,oneof" json:"origin,omitempty"`
	Destination   *string                `protobuf:"bytes,3,opt,name=destination,proto3,oneof" json:"destination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatedRouteRequest) Reset() {
	*x = UpdatedRouteRequest{}
	mi := &file_proto_route_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedRouteRequest) ProtoMessage() {}

func (x *UpdatedRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_route_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedRouteRequest.ProtoReflect.Descriptor instead.
func (*UpdatedRouteRequest) Descriptor() ([]byte, []int) {
	return file_proto_route_proto_rawDescGZIP(), []int{2}
}

func (x *UpdatedRouteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatedRouteRequest) GetOrigin() string {
	if x != nil && x.Origin != nil {
		return *x.Origin
	}
	return ""
}

func (x *UpdatedRouteRequest) GetDestination() string {
	if x != nil && x.Destination != nil {
		return *x.Destination
	}
	return ""
}

type UpdatedRouteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatedRouteResponse) Reset() {
	*x = UpdatedRouteResponse{}
	mi := &file_proto_route_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatedRouteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedRouteResponse) ProtoMessage() {}

func (x *UpdatedRouteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_route_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedRouteResponse.ProtoReflect.Descriptor instead.
func (*UpdatedRouteResponse) Descriptor() ([]byte, []int) {
	return file_proto_route_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatedRouteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type AssignDriverRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RouteId       string                 `protobuf:"bytes,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	DriverId      string                 `protobuf:"bytes,2,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignDriverRequest) Reset() {
	*x = AssignDriverRequest{}
	mi := &file_proto_route_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDriverRequest) ProtoMessage() {}

func (x *AssignDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_route_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDriverRequest.ProtoReflect.Descriptor instead.
func (*AssignDriverRequest) Descriptor() ([]byte, []int) {
	return file_proto_route_proto_rawDescGZIP(), []int{4}
}

func (x *AssignDriverRequest) GetRouteId() string {
	if x != nil {
		return x.RouteId
	}
	return ""
}

func (x *AssignDriverRequest) GetDriverId() string {
	if x != nil {
		return x.DriverId
	}
	return ""
}

type AssignDriverResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignDriverResponse) Reset() {
	*x = AssignDriverResponse{}
	mi := &file_proto_route_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDriverResponse) ProtoMessage() {}

func (x *AssignDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_route_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDriverResponse.ProtoReflect.Descriptor instead.
func (*AssignDriverResponse) Descriptor() ([]byte, []int) {
	return file_proto_route_proto_rawDescGZIP(), []int{5}
}

func (x *AssignDriverResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_route_proto protoreflect.FileDescriptor

const file_proto_route_proto_rawDesc = "" +
	"\n" +
	"\x11proto/route.proto\x12\x05route\"^\n" +
	"\x12CreateRouteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06origin\x18\x02 \x01(\tR\x06origin\x12 \n" +
	"\vdestination\x18\x03 \x01(\tR\vdestination\"/\n" +
	"\x13CreateRouteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x84\x01\n" +
	"\x13UpdatedRouteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\x06origin\x18\x02 \x01(\tH\x00R\x06origin\x88\x01\x01\x12%\n" +
	"\vdestination\x18\x03 \x01(\tH\x01R\vdestination\x88\x01\x01B\t\n" +
	"\a_originB\x0e\n" +
	"\f_destination\"0\n" +
	"\x14UpdatedRouteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"M\n" +
	"\x13AssignDriverRequest\x12\x19\n" +
	"\broute_id\x18\x01 \x01(\tR\arouteId\x12\x1b\n" +
	"\tdriver_id\x18\x02 \x01(\tR\bdriverId\"0\n" +
	"\x14AssignDriverResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xe5\x01\n" +
	"\fRouteService\x12D\n" +
	"\vCreateRoute\x12\x19.route.CreateRouteRequest\x1a\x1a.route.CreateRouteResponse\x12F\n" +
	"\vUpdateRoute\x12\x1a.route.UpdatedRouteRequest\x1a\x1b.route.UpdatedRouteResponse\x12G\n" +
	"\fAssignDriver\x12\x1a.route.AssignDriverRequest\x1a\x1b.route.AssignDriverResponseB?Z=github.com/KingBean4903/cqrs-logistics-fleet-tracking/api/genb\x06proto3"

var (
	file_proto_route_proto_rawDescOnce sync.Once
	file_proto_route_proto_rawDescData []byte
)

func file_proto_route_proto_rawDescGZIP() []byte {
	file_proto_route_proto_rawDescOnce.Do(func() {
		file_proto_route_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_route_proto_rawDesc), len(file_proto_route_proto_rawDesc)))
	})
	return file_proto_route_proto_rawDescData
}

var file_proto_route_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_route_proto_goTypes = []any{
	(*CreateRouteRequest)(nil),   // 0: route.CreateRouteRequest
	(*CreateRouteResponse)(nil),  // 1: route.CreateRouteResponse
	(*UpdatedRouteRequest)(nil),  // 2: route.UpdatedRouteRequest
	(*UpdatedRouteResponse)(nil), // 3: route.UpdatedRouteResponse
	(*AssignDriverRequest)(nil),  // 4: route.AssignDriverRequest
	(*AssignDriverResponse)(nil), // 5: route.AssignDriverResponse
}
var file_proto_route_proto_depIdxs = []int32{
	0, // 0: route.RouteService.CreateRoute:input_type -> route.CreateRouteRequest
	2, // 1: route.RouteService.UpdateRoute:input_type -> route.UpdatedRouteRequest
	4, // 2: route.RouteService.AssignDriver:input_type -> route.AssignDriverRequest
	1, // 3: route.RouteService.CreateRoute:output_type -> route.CreateRouteResponse
	3, // 4: route.RouteService.UpdateRoute:output_type -> route.UpdatedRouteResponse
	5, // 5: route.RouteService.AssignDriver:output_type -> route.AssignDriverResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_route_proto_init() }
func file_proto_route_proto_init() {
	if File_proto_route_proto != nil {
		return
	}
	file_proto_route_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_route_proto_rawDesc), len(file_proto_route_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_route_proto_goTypes,
		DependencyIndexes: file_proto_route_proto_depIdxs,
		MessageInfos:      file_proto_route_proto_msgTypes,
	}.Build()
	File_proto_route_proto = out.File
	file_proto_route_proto_goTypes = nil
	file_proto_route_proto_depIdxs = nil
}
